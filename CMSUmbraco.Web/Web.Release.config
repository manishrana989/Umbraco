<?xml version="1.0" encoding="utf-8"?>

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">

  <appSettings>

    <!-- Hangfire -->
    <!-- approvalReminders - set value as a cronExpression (e.g. */10 * * * *) or leave blank to not schedule/delete -->
    <add key="website.approvalReminders:schedule" value="" xdt:Transform="Insert"  />
    
    <!-- AWS S3 Settings -->
    <add key="AWSAccessKey" value="" xdt:Transform="Insert" />
    <add key="AWSSecretKey" value="" xdt:Transform="Insert" />

    <!-- AWS S3 Media Settings -->
    <add key="BucketFileSystem:Region" value="us-east-1" xdt:Transform="Insert"  />
    <add key="BucketFileSystem:BucketHostname" value="" xdt:Transform="Insert" />
    <add key="BucketFileSystem:BucketName" value="" xdt:Transform="Insert" />
    <add key="BucketFileSystem:MediaPrefix" value="media" xdt:Transform="Insert"  />
    <add key="BucketFileSystem:FormsPrefix" value="forms" xdt:Transform="Insert"  />
    <add key="BucketFileSystem:DisableVirtualPathProvider" value="false" xdt:Transform="Insert"  />
    <add key="BucketFileSystem:CannedACL" value="NoACL" xdt:Transform="Insert"  />

    <!-- AWS S3 Logging Settings -->
    <add key="BucketLogging:BucketName" value="" xdt:Transform="Insert" />
    <add key="BucketLogging:Region" value="" xdt:Transform="Insert" />
    <add key="BucketLogging:LogPrefix" value="" xdt:Transform="Insert" />
    <add key="BucketLogging:MinimumLoggingLevel" value="Warning" xdt:Transform="Insert" />

    <!-- Media URL Settings -->
    <!-- Specify the root domain to use, inc https -->
    <add key="Website.MediaDomain" value="" xdt:Transform="Insert" />
    <!-- Specify the media prefix to override the umbracoFile's path -->
    <add key="Website.MediaPrefix" value="" xdt:Transform="Insert" />
    <!-- Public facing backoffice login url (used in emails). If blank or missing will derive from HttpContext.Current.Request.Url -->
    <!-- Also used to determine the rootUrl (i.e. without the /umbraco) in the Swagger Composer -->
    <add key="Website.BackofficeLoginUrl" value="" xdt:Transform="Insert" />

    <!-- External API / Swagger : ensure disabled on release by default -->
    <add key="GlobalCMS.EnableExternalApi" value="true" xdt:Locator="Match(key)" xdt:Transform="Replace" />
    <add key="GlobalCMS.EnableSwagger" value="false" xdt:Locator="Match(key)" xdt:Transform="Replace" />

  </appSettings>

  <!--
  Do I need to configure the SessionState (am I using TempData?). 
  If so then I need to use the SqlSessionStateStore 
  https://docs.microsoft.com/en-us/previous-versions/dotnet/articles/aa478952(v=msdn.10)?redirectedfrom=MSDN 
  -->

  <connectionStrings xdt:Transform="Replace">
    
    <remove name="umbracoDbDSN" />
    <add name="umbracoDbDSN" connectionString="" providerName="System.Data.SqlClient" />
    
    <remove name="mongoDb" />
    <add name="mongoDb" connectionString="" />
    
  </connectionStrings>


  <system.net>
    <mailSettings>
      <smtp deliveryMethod="Network" xdt:Transform="SetAttributes(deliveryMethod)" >

        <network host="" userName="" password="" xdt:Transform="Insert" />

      </smtp>
    </mailSettings>
  </system.net>

  <system.web>

    <compilation xdt:Transform="RemoveAttributes(debug)" />

    <customErrors defaultRedirect="GenericError.html" mode="RemoteOnly" xdt:Transform="Replace">

      <error statusCode="500" redirect="InternalError.html"/>

    </customErrors>

  </system.web>

  <system.webServer>
    <httpProtocol>
      <customHeaders>

        <remove name="Strict-Transport-Security" xdt:Transform="Insert" />
        <add name="Strict-Transport-Security" value="max-age=31536000" xdt:Transform="Insert" />

      </customHeaders>
    </httpProtocol>


    <rewrite>
      <rules>

      </rules>

      <outboundRules>
        <rule name="Add Strict-Transport-Security when HTTPS" enabled="true" xdt:Transform="Insert">
          <match serverVariable="RESPONSE_Strict_Transport_Security" pattern=".*" />
          <conditions>
            <add input="{HTTPS}" pattern="on" ignoreCase="true" />
          </conditions>
          <action type="Rewrite" value="max-age=31536000" />
        </rule>

        <rule name="Set UMB_UPDCHK cookie flags" xdt:Transform="Insert" >
          <match serverVariable="RESPONSE_Set_Cookie" pattern="UMB_UPDCHK=[^;\s]*"/>
          <action type="Rewrite" value="{R:0}; Path=/; Secure; HttpOnly; SameSite=Strict" />
        </rule>
        <rule name="Set UMB_UCONTEXT_C cookie flags" xdt:Transform="Insert">
          <match serverVariable="RESPONSE_Set_Cookie" pattern="UMB_UCONTEXT_C=[^;\s]*" />
          <action type="Rewrite" value="{R:0}; Path=/; Secure; HttpOnly; SameSite=Strict" />
        </rule>
        <rule name="Set UMB_UCONTEXT cookie flags" xdt:Transform="Insert" >
          <match serverVariable="RESPONSE_Set_Cookie" pattern="UMB_UCONTEXT=[^;\s]*"/>
          <action type="Rewrite" value="{R:0}; Path=/; Secure; HttpOnly; SameSite=Strict" />
        </rule>
        <rule name="Set UMB-XSRF-V cookie flags" xdt:Transform="Insert">
          <match serverVariable="RESPONSE_Set_Cookie" pattern="UMB-XSRF-V=[^;\s]*" />
          <action type="Rewrite" value="{R:0}; Path=/; Secure; HttpOnly; SameSite=Strict" />
        </rule>

        <!-- Read from JavaScript, so no HttpOnly -->
        <rule name="Set UMB_PREVIEW cookie flags" xdt:Transform="Insert">
          <match serverVariable="RESPONSE_Set_Cookie" pattern="UMB_PREVIEW=[^;\s]*" />
          <action type="Rewrite" value="{R:0}; Path=/; Secure; SameSite=Strict" />
        </rule>
        <rule name="Set UMB-XSRF-TOKEN cookie flags" xdt:Transform="Insert">
          <match serverVariable="RESPONSE_Set_Cookie" pattern="UMB-XSRF-TOKEN=[^;\s]*" />
          <action type="Rewrite" value="{R:0}; Path=/; Secure; SameSite=Strict" />
        </rule>

        <!-- UMB_MCULTURE cookie is only ever set via JavaScript. -->
      </outboundRules>

    </rewrite>
    
  </system.webServer>

</configuration>